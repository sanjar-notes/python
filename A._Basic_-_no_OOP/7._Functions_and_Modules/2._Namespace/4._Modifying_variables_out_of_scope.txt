Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2020-05-21T17:07:54+05:30

====== 4. Modifying variables out of scope ======
Created Thursday 21 May 2020

Does python allow modifying variables that are currently not in scope? **Yes**!

Among the 4 namespaces, local is meant to be changeable and builtins are immutable. So we only have two possibilities:
1. ''global'' - allows changing of global variables.
{{{code: lang="python3" linenumbers="True"
x = 21
def f():
	x = 3
	global x
	x = 22 	# global x set to 22
	
print(x) # 22

def g():
	global x
	x = 23	
}}}

2. ''nonlocal'' - syntax same as ''global''. Used to access outer function's variable inside a nested function. 
	* Cannot be used in place of ''global''. Strictly used for nested entities.
{{{code: lang="python3" linenumbers="True"
def f():
    x = 2
    def g():
    	x = 64 # f.x not changed
        nonlocal x
        x = 45
    g()
    print(x)
f() # 45
}}}


