Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2021-01-14T16:00:30+05:30

====== 0. String ======
Created Thursday 14 January 2021

**Strings**
1. Strings are immutable character array(coz lists are mutable).
2. Access a single letter parrot[i],
	a. Here we can access i th from left, by giving i>=0
	b. By giving negative i, we can access characters from R->L e.g parrot[-1]
3. Slice
	a. parrot[a:b]// starting from a to b (excluding), a and b could be negative
	(If omitted a is 0 and b = end of string)
4. Remember we cannot go around the string or R->L, coz that is not a string.
5. We can also give ith from here, i.e parrot[a:b:ith] - prints from a to b, printing every ith character from a. Jump = ith -1
	e.g x = "1, 2, 3, 4", print(x[0::3]) = 1234
6. + operator for concatenation 
7. * operators concatenates string i times, where i is an integer
8. We can do print(str1, str2, int 1, int 2) - i.e it's a variadic function
9. Operator precedence still applies, i.e print("p"*5+4) results in an error
10. Searching for substring: 'in' operator
	"day" in "Monday, return 

**String methods**
1. string.''strip()'' -> a string - removes the ending characters maximally w.r.t to the given string, until a unknown character is encountered
2. string.''split([sep=whitespace, [max_splits=-1]])'' - returns a list of strings which were seperated by 'sep' in the "string"
3. sep''.join(''iterable of strings'')'' -> a string - joins the list/set/dict into a string seperated by sep, solves terminating comma-like problems.
