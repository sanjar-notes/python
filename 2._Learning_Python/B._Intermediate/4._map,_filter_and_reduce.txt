Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2020-10-20T19:30:10+05:30

====== 4. map, filter and reduce ======
Created Tuesday 20 October 2020

=== Intro ===
* The map, filter, and reduce functions simplify the job of working with lists.
* All 3 are simple in-built functions, but they are a powerful syntactic sugar.
* MAID: Ï† - Function, Iterable **Very important**

=== Syntax ===
* All 3 have the same syntax
{{{code: lang="python3" linenumbers="True"
map(foo, listt)
filter(foo, listt)
functools.reduce(foo, listt) # Discouraged - 'for' loop is preferred - Demoted to functools as of Python 3+
}}}


=== Differences ===
**map** - Traverses across iterable(s) and computes output for each.
* Return an iterator that applies function to every item of iterable(''listt''), yielding the results. 
* If passing **n** iterables, function must be **n**-ary, and is applied to items from all iterables in parallel. With multiple iterables, the iterator stops when the shortest iterable is exhausted.
* map object is partially computed, until the object is completely traversed. Traversal may be done directly or indirectly(creating a list/set/tuple using their constructor).
{{{code: lang="python3" linenumbers="True"
# Example 1
x = [1, 2, 3]
y = [4, 5, 6]
def f(a, b):
	return a+b
for k in map(f, x, y):
	print(k)
# Prints - 5 7 9 one different lines


# Example 2
z = [1, 2, 3]
p = list(map(lambda t: t, z) # p is [1, 2, 3]
}}}

--------------------

**filter **- filters an iterable based on some criteria(boolean).
* Returns an iterable(''filter object''), containing only those items from iterable(''listt'') which satisfy the criteria(i.e the function(''foo'') returns Truthy value).
{{{code: lang="python3" linenumbers="True"
x = [1, 2, 3, 4]
y = filter(lambda t: t%2==0, x) # y is [2, 4]
}}}

--------------------

**functools.reduce **-  compounds a value w.r.t a function
Apply function(''foo'') of two arguments cumulatively to the items of iterable, from left to right, so as to reduce the iterable to a single value.
Returns a value - 
{{./pasted_image.png?width=400}}
{{{code: lang="python3" linenumbers="True"
import functools
start = 1 # not necessary
nums = [start, 2, 3, 5, 7, 11]
print(functools.reduce(lambda p, q: p*q, nums)) # --> 2130
}}}
